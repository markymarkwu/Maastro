BasicUNet features: (6, 16, 32, 64, 128, 16).
Training begins:
SC (189, 512, 512)
SM: (189, 512, 512)
X: torch.Size([2, 189, 512, 512]) y: (1, 99, 100, 191)
  0%|                                                     | 0/1 [00:00<?, ?it/s]
  0%|                                                     | 0/1 [00:00<?, ?it/s]Process wandb_internal:
Traceback (most recent call last):
  File "/Users/wangyangwu/miniforge3/envs/maastro/lib/python3.9/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/Users/wangyangwu/miniforge3/envs/maastro/lib/python3.9/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/Users/wangyangwu/miniforge3/envs/maastro/lib/python3.9/site-packages/wandb/sdk/internal/internal.py", line 159, in wandb_internal
    thread.join()
  File "/Users/wangyangwu/miniforge3/envs/maastro/lib/python3.9/threading.py", line 1053, in join
    self._wait_for_tstate_lock()
  File "/Users/wangyangwu/miniforge3/envs/maastro/lib/python3.9/threading.py", line 1069, in _wait_for_tstate_lock
    elif lock.acquire(block, timeout):
KeyboardInterrupt
Traceback (most recent call last):
  File "<string>", line 1, in <module>
  File "/Users/wangyangwu/miniforge3/envs/maastro/lib/python3.9/multiprocessing/spawn.py", line 116, in spawn_main
    exitcode = _main(fd, parent_sentinel)
  File "/Users/wangyangwu/miniforge3/envs/maastro/lib/python3.9/multiprocessing/spawn.py", line 129, in _main
    return self._bootstrap(parent_sentinel)
  File "/Users/wangyangwu/miniforge3/envs/maastro/lib/python3.9/multiprocessing/process.py", line 333, in _bootstrap
    threading._shutdown()
  File "/Users/wangyangwu/miniforge3/envs/maastro/lib/python3.9/threading.py", line 1448, in _shutdown
    lock.acquire()
KeyboardInterrupt
Exception in thread NetStatThr:
Traceback (most recent call last):
  File "/Users/wangyangwu/miniforge3/envs/maastro/lib/python3.9/threading.py", line 973, in _bootstrap_inner
    self.run()
  File "/Users/wangyangwu/miniforge3/envs/maastro/lib/python3.9/threading.py", line 910, in run
    self._target(*self._args, **self._kwargs)
  File "/Users/wangyangwu/miniforge3/envs/maastro/lib/python3.9/site-packages/wandb/sdk/wandb_run.py", line 148, in check_network_status
    status_response = self._interface.communicate_network_status()
  File "/Users/wangyangwu/miniforge3/envs/maastro/lib/python3.9/site-packages/wandb/sdk/interface/interface.py", line 125, in communicate_network_status
    resp = self._communicate_network_status(status)
  File "/Users/wangyangwu/miniforge3/envs/maastro/lib/python3.9/site-packages/wandb/sdk/interface/interface_shared.py", line 388, in _communicate_network_status
    resp = self._communicate(req, local=True)
  File "/Users/wangyangwu/miniforge3/envs/maastro/lib/python3.9/site-packages/wandb/sdk/interface/interface_shared.py", line 213, in _communicate
    return self._communicate_async(rec, local=local).get(timeout=timeout)
  File "/Users/wangyangwu/miniforge3/envs/maastro/lib/python3.9/site-packages/wandb/sdk/interface/interface_shared.py", line 218, in _communicate_async
    raise Exception("The wandb backend process has shutdown")
Exception: The wandb backend process has shutdown
Exception in thread ChkStopThr:
Traceback (most recent call last):
  File "/Users/wangyangwu/miniforge3/envs/maastro/lib/python3.9/threading.py", line 973, in _bootstrap_inner
    self.run()
  File "/Users/wangyangwu/miniforge3/envs/maastro/lib/python3.9/threading.py", line 910, in run
    self._target(*self._args, **self._kwargs)
  File "/Users/wangyangwu/miniforge3/envs/maastro/lib/python3.9/site-packages/wandb/sdk/wandb_run.py", line 166, in check_status
    status_response = self._interface.communicate_stop_status()
  File "/Users/wangyangwu/miniforge3/envs/maastro/lib/python3.9/site-packages/wandb/sdk/interface/interface.py", line 114, in communicate_stop_status
    resp = self._communicate_stop_status(status)
  File "/Users/wangyangwu/miniforge3/envs/maastro/lib/python3.9/site-packages/wandb/sdk/interface/interface_shared.py", line 378, in _communicate_stop_status
    resp = self._communicate(req, local=True)
  File "/Users/wangyangwu/miniforge3/envs/maastro/lib/python3.9/site-packages/wandb/sdk/interface/interface_shared.py", line 213, in _communicate
    return self._communicate_async(rec, local=local).get(timeout=timeout)
  File "/Users/wangyangwu/miniforge3/envs/maastro/lib/python3.9/site-packages/wandb/sdk/interface/interface_shared.py", line 218, in _communicate_async
    raise Exception("The wandb backend process has shutdown")
